(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{171:function(n,a,t){"use strict";t.r(a);var s=t(0),v=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,a=n.$createElement,t=n._self._c||a;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"性能优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#性能优化","aria-hidden":"true"}},[n._v("#")]),n._v(" 性能优化")]),n._v(" "),t("h2",{attrs:{id:"yoho-optimizion-雅虎军规"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yoho-optimizion-雅虎军规","aria-hidden":"true"}},[n._v("#")]),n._v(" yoho optimizion(雅虎军规)")]),n._v(" "),t("div",{staticClass:"language-md extra-class"},[t("pre",{pre:!0,attrs:{class:"language-md"}},[t("code",[n._v("网络部分\n尽量减少HTTP请求数\n合并文件\n雪碧图\n小图Base64\n减少DNS查找\n开启DNS预解析\n使用CND静态资源服务器\n避免重定向\n杜绝404\n\n缓存\n配置ETags\n实体标签（ETags），是服务器和浏览器用来决定浏览器缓存中组件与源服务器中的组件是否匹配的一种机制\n添上Expires或者Cache-Control HTTP头\n使用外链的方式引入JS和CSS（缓存）\n\n内容部分\n按需加载组件\n预加载组件\n减少DOM元素的数量\n尽量少用iframe\n压缩JavaScript和CSS（代码层面）\n\nCSS 部分\n避免使用CSS表达式\n选择"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),n._v("link")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),n._v("而不是@import\n避免使用滤镜\n把样式表放在顶部\n\nJS 部分\n把脚本放在底部\n去除重复脚本\n减少DOM访问\n\n图片部分\n选用合适的图片格式\n雪碧图中间少留空白\n不要用HTML缩放图片，要小图就去加载小图\n用小的可缓存的favicon.ico\n\ncookie\n给cookie减肥\n清除不必要的cookie\ncookie尽可能小\n设置好合适的域\n合适的有效期\n把静态资源放在不含cookie的域下\n当浏览器发送对静态图像的请求时，cookie也会一起发送，而服务器根本不需要这些cookie。\n\n移动端\n保证所有组件都小于25K\n把组件打包到一个复合文档里\n\n服务器\n开启Gzip等压缩\n避免图片src属性为空（为空浏览器也会向服务器发送另一个请求）\n对Ajax用GET请求\n尽早清空缓冲区\n使用CDN（内容分发网络）\n内容分发网络（CDN）是一组分散在不同地理位置的web服务器，用来给用户更高效地发送内容\n")])])]),t("h2",{attrs:{id:"css优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css优化","aria-hidden":"true"}},[n._v("#")]),n._v(" CSS优化")]),n._v(" "),t("p",[n._v("多个 css 合并，尽量减少 HTTP 请求")]),n._v(" "),t("p",[n._v("css 雪碧图")]),n._v(" "),t("p",[n._v("抽象提取公共样式，减少代码量")]),n._v(" "),t("p",[n._v("选择器优化嵌套，尽量避免层级过深 （用‘>’替换‘ ’）")]),n._v(" "),t("p",[n._v("属性值为 0 时，不加单位")]),n._v(" "),t("p",[n._v("压缩CSS代码")]),n._v(" "),t("p",[n._v("避免使用 CSS 表达式")]),n._v(" "),t("p",[n._v("它们要计算成千上万次并且可能会对你页面的性能产生影响。")]),n._v(" "),t("h2",{attrs:{id:"首屏图片加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#首屏图片加载","aria-hidden":"true"}},[n._v("#")]),n._v(" 首屏图片加载")]),n._v(" "),t("p",[t("strong",[n._v("预加载：")]),n._v("\n就是事先把网页的图片加载到本地，之后就直接到缓存那里拿图片了。\n预加载分为有序加载和无序加载两种。")]),n._v(" "),t("h2",{attrs:{id:"延迟加载（懒加载）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#延迟加载（懒加载）","aria-hidden":"true"}},[n._v("#")]),n._v(" 延迟加载（懒加载）")]),n._v(" "),t("p",[n._v("原理：先用一张极小的图片来代替，等到内容加载完了，再向服务器请求真正的图片并替换，可以有效的减少等待时间。优先显示可视区域的图片而不一次性加载所有图片，当需要显示的时候再发送图片请求，避免打开网页时加载过多资源。")]),n._v(" "),t("p",[n._v("优点：可以减少请求数(有可能不会去加载)或者延迟请求，减缓了服务器端的压力")]),n._v(" "),t("p",[n._v("jquery的lazyload插件可以实现图片延迟加载的插件\n使用settimeout或setinterval进行延迟加载")]),n._v(" "),t("h2",{attrs:{id:"服务器端渲染-用户首屏时间优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务器端渲染-用户首屏时间优化","aria-hidden":"true"}},[n._v("#")]),n._v(" 服务器端渲染.用户首屏时间优化")]),n._v(" "),t("p",[n._v("一、代码的足够简洁\n减少代码冗余，保持简洁的代码风格，这是作为一个网页程序员的必修，能同样实现一个效果的能用 css 就尽量不用 js，能用两行代码解决问题的就别写三行，这是最基础的一点。")]),n._v(" "),t("p",[n._v("二、减少资源载入\n这里子凡所说的资源主要是指 js、css 文件，因为我知道现在很多的前端开发设计人员喜欢用各种开源的特效或者别人做好的效果，其中包括为了给网站添加几个图标就引入一个开源的图标字体库，为了某个特效又在引入几个 js 和 css 文件，这无形之中就为网站加重了“份量”。")]),n._v(" "),t("p",[n._v("三、图片使用懒加载，视频或音频禁止自动播放\n还记得子凡曾在泪雪博客写过关于“图片懒加载是否会影响网站 SEO 优化”的文章，其中就说到过如何合理的使用图片懒加载技术提升用户体验而不影响网站优化，因为懒加载是为了防止页面一被打开就立即载入图片，这样就会占用网络带宽，从而影响网站的打开速度以及网站首屏的请求，所以非正文图片都是可以做懒加载的。")]),n._v(" "),t("p",[n._v("图片是每个网站基本都少不了的东西，但是对于做视频、音频的站点来说，如果打开页面就自动播放，占用的网站带宽资源都更多了，所以这也是一个网站打开速度优化的一个小知识。")]),n._v(" "),t("p",[n._v("四、使用 CDN 加速静态资源\n关于使用 CDN 加速是否影响网站优化的文章子凡也曾有过讨论，子凡对于网站整体做 CDN 加速还是有些不太认同，但是对于将网站静态资源做 CDN 加速镜像或者缓存优化却是非常认同的，例如将网站的 js、css、图片等文件做 CDN 加速是更有利于整个网站的加载和打开速度的。")]),n._v(" "),t("p",[n._v("五、提升页面渲染速度\n将 CSS 样式写在头部样式表中，减少由 CSS 文件网络请求造成的渲染阻塞。")]),n._v(" "),t("p",[n._v("将 JavaScript 放到文档末尾，或使用 async 方式加载，避免 JS 执行阻塞渲染。")]),n._v(" "),t("p",[n._v("对非文字元素（如图片，视频）指定宽高，避免浏览器重排重绘。")]),n._v(" "),t("p",[n._v("六、服务器本身的速度优化\n启用服务器 Gzip 压缩功能；")]),n._v(" "),t("p",[n._v("开启数据库查询及页面缓存功能（如果是直接生成静态页面的网站可忽略）；")]),n._v(" "),t("p",[n._v("升级或者保证服务器足够的网络带宽；")]),n._v(" "),t("p",[n._v("开启网站缓存，充分利用本地缓存。")]),n._v(" "),t("p",[n._v("同样随着网络安全的重视程度，如果你的网站已经安装 SSL 证书启用了 HTTPS 协议，那么你可以开启 HTTPS/2 或者 SPDY 这个功能，可以在某些程度上加速网站的打开。")]),n._v(" "),t("h2",{attrs:{id:"性能优化的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#性能优化的方法","aria-hidden":"true"}},[n._v("#")]),n._v(" 性能优化的方法")]),n._v(" "),t("p",[n._v("（1）减少http请求次数：CSS，Sprites, JS、CSS源码压缩、图片大小控制合适；网页Gzip，CDN托管，data缓存 ，图片服务器。")]),n._v(" "),t("p",[n._v("（2）前端模板 JS+数据，减少由于HTML标签导致的带宽浪费，前端用变量保存AJAX请求结果，每次操作本地变量，不用请求，减少请求次数。")]),n._v(" "),t("p",[n._v("（3）用innerHTML代替DOM操作，减少DOM操作次数，优化javascript性能。")]),n._v(" "),t("p",[n._v("（4）当需要设置的样式很多时设置className而不是直接操作style。")]),n._v(" "),t("p",[n._v("（5）少用全局变量、缓存DOM节点查找的结果。减少IO读取操作。")]),n._v(" "),t("p",[n._v("（6）避免使用CSS Expression（css表达式)又称Dynamic properties(动态属性)。")]),n._v(" "),t("p",[n._v("（7）图片预加载，将样式表放在顶部，将脚本放在底部 加上时间戳。")])])}],!1,null,null,null);a.default=v.exports}}]);